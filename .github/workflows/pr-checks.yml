name: 🔍 PR Quality Checks

on:
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  # Quick smoke tests for PR validation
  smoke-tests:
    name: 💨 Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run smoke tests (API only)
        run: npm run test:api
        env:
          CI: true

      - name: 📊 Comment PR with results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🔍 PR Quality Check')
            );
            
            const jobStatus = '${{ job.status }}';
            const isSuccess = jobStatus === 'success';
            
            const body = \`## 🔍 PR Quality Check Results
            
            **Smoke Tests**: \${isSuccess ? '✅ Passed' : '❌ Failed'}
            
            📊 **Quick Stats**:
            - API Tests: \${isSuccess ? 'All passed' : 'Some failed'}
            - Commit: \\\`${{ github.sha }}\\\`
            - Branch: \\\`${{ github.head_ref }}\\\`
            
            \${isSuccess 
              ? '🚀 Ready for full test suite on merge!' 
              : '⚠️ Please fix failing tests before merging.'}
            \`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  # Code quality checks
  code-quality:
    name: 📝 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 TypeScript check
        run: npx tsc --noEmit

      - name: 📏 Lint check
        run: npx eslint . --ext .ts,.js --max-warnings 0
        continue-on-error: true

      - name: 🎨 Format check
        run: npx prettier --check "**/*.{ts,js,json,md}"
        continue-on-error: true
