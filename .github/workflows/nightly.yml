name: 🌙 Nightly Full Test Suite

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Test type to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - api
          - ui
          - cross-browser

permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_VERSION: '20.x'

jobs:
  # Job 1: API Tests (Fast feedback)
  api-tests:
    name: 🔧 API Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run API tests
        run: npm run test:api
        env:
          CI: true

      - name: 📊 Upload API test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-results
          path: playwright-report/
          retention-days: 7

  # Job 2: Cross-browser testing (nightly only)
  cross-browser-tests:
    name: 🌐 Cross-Browser Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install ${{ matrix.browser }} --with-deps

      - name: 🧪 Run UI tests on ${{ matrix.browser }}
        run: npx playwright test --project=ui-tests-${{ matrix.browser }}
        env:
          CI: true

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cross-browser-test-results-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 7

  # Job 3a: Generate API Test Report
  generate-api-report:
    name: 📊 Generate API Report
    runs-on: ubuntu-latest
    needs: [api-tests]
    if: always()
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download API test results
        uses: actions/download-artifact@v4
        with:
          name: api-test-results
          path: ./all-test-results/api-test-results
        continue-on-error: true

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📊 Organize API report
        run: |
          echo "📁 Organizing API report..."
          mkdir -p ./pages-deploy/nightly-reports/${{ github.run_number }}/api
          
          if [ -d "./all-test-results/api-test-results" ]; then
            echo "✅ Found API test results"
            cp -r ./all-test-results/api-test-results/* ./pages-deploy/nightly-reports/${{ github.run_number }}/api/
            echo "✅ API report organized successfully"
            ls -la ./pages-deploy/nightly-reports/${{ github.run_number }}/api/ | head -10
          else
            echo "❌ No API test results found"
          fi

      - name: 📤 Upload API Report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: nightly-api-test-report
          path: ./pages-deploy/nightly-reports/${{ github.run_number }}/api/
          retention-days: 30

  # Job 3b: Generate Browser Test Report
  generate-browser-report:
    name: 🌐 Generate Browser Report
    runs-on: ubuntu-latest
    needs: [cross-browser-tests]
    if: always()
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download Chromium test results
        uses: actions/download-artifact@v4
        with:
          name: cross-browser-test-results-chromium
          path: ./all-test-results/cross-browser-test-results-chromium
        continue-on-error: true

      - name: 📥 Download Firefox test results
        uses: actions/download-artifact@v4
        with:
          name: cross-browser-test-results-firefox
          path: ./all-test-results/cross-browser-test-results-firefox
        continue-on-error: true

      - name: 📥 Download WebKit test results
        uses: actions/download-artifact@v4
        with:
          name: cross-browser-test-results-webkit
          path: ./all-test-results/cross-browser-test-results-webkit
        continue-on-error: true

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📊 Organize browser report
        run: |
          echo "📁 Organizing browser report..."
          mkdir -p ./pages-deploy/nightly-reports/${{ github.run_number }}/browser
          
          BROWSER_COUNT=$(ls -d ./all-test-results/cross-browser-test-results-* 2>/dev/null | wc -l)
          echo "Found $BROWSER_COUNT browser test directories"
          
          if [ $BROWSER_COUNT -gt 0 ]; then
            echo "✅ Found cross-browser test results"
            
            # Merge the results from all browsers
            BROWSER_PATHS=()
            for dir in ./all-test-results/cross-browser-test-results-*/; do
              echo "  📂 Processing: $dir"
              BROWSER_PATHS+=("$(pwd)/$dir")
            done
            
            echo "🔄 Merging browser test reports..."
            OUTPUT_DIR="$(pwd)/pages-deploy/nightly-reports/${{ github.run_number }}/browser"
            npx playwright merge-reports --reporter html "${BROWSER_PATHS[@]}"
            
            # Move the generated report to output directory
            if [ -d "blob-report" ]; then
              rm -rf "$OUTPUT_DIR"/*
              cp -r blob-report/* "$OUTPUT_DIR/"
              rm -rf blob-report
              echo "✅ Browser report generated successfully"
              ls -la "$OUTPUT_DIR" | head -10
            else
              echo "⚠️ Report not generated, copying first browser result as fallback"
              cp -r ./all-test-results/cross-browser-test-results-chromium/* "$OUTPUT_DIR/"
            fi
          else
            echo "⚠️ No cross-browser test results found"
          fi

      - name: 📤 Upload Browser Report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: nightly-browser-test-report
          path: ./pages-deploy/nightly-reports/${{ github.run_number }}/browser/
          retention-days: 30

  # Job 4: Nightly Report Landing Page
  nightly-report-page:
    name: 📄 Create Nightly Report Landing Page
    runs-on: ubuntu-latest
    needs: [generate-api-report, generate-browser-report]
    if: always()
    
    steps:
      - name: 📥 Download API Report
        uses: actions/download-artifact@v4
        with:
          name: nightly-api-test-report
          path: ./pages-deploy/nightly-reports/${{ github.run_number }}/api
        continue-on-error: true

      - name: 📥 Download Browser Report
        uses: actions/download-artifact@v4
        with:
          name: nightly-browser-test-report
          path: ./pages-deploy/nightly-reports/${{ github.run_number }}/browser
        continue-on-error: true

      - name: 📁 Create index.html for nightly reports landing page
        run: |
          mkdir -p ./pages-deploy/nightly-reports/${{ github.run_number }}
          
          cat > ./pages-deploy/nightly-reports/${{ github.run_number }}/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Nightly Test Reports - Run ${{ github.run_number }}</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
              .header { background: #1a237e; color: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
              .reports { display: flex; gap: 20px; }
              .report-card { background: white; padding: 20px; border-radius: 8px; flex: 1; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
              .report-card h2 { margin-top: 0; }
              .report-card a { display: inline-block; margin-top: 10px; padding: 10px 20px; background: #1a237e; color: white; text-decoration: none; border-radius: 4px; }
              .report-card a:hover { background: #0d1552; }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>🌙 Nightly Test Reports - Run #${{ github.run_number }}</h1>
              <p>Branch: ${{ github.ref_name }} | Commit: ${{ github.sha }}</p>
            </div>
            <div class="reports">
              <div class="report-card">
                <h2>🔧 API Tests</h2>
                <p>Automated API testing suite</p>
                <a href="./api/index.html">📊 View Report</a>
              </div>
              <div class="report-card">
                <h2>🌐 Cross-Browser Tests</h2>
                <p>UI tests on Chromium, Firefox, Safari</p>
                <a href="./browser/index.html">📊 View Report</a>
              </div>
            </div>
          </body>
          </html>
          EOF
          
      - name: 🌐 Setup GitHub Pages
        uses: actions/configure-pages@v4
        if: github.ref == 'refs/heads/main'
        continue-on-error: true

      - name: 📤 Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          path: ./pages-deploy
        continue-on-error: true

      - name: 🚀 Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/main'
        continue-on-error: true

  # Job 5: Notifications
  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [api-tests, cross-browser-tests, generate-api-report, generate-browser-report]
    if: always()
    
    steps:
      - name: 📢 Send Slack notification with report links
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: custom
          custom_payload: |
            {
              "text": "🌙 Nightly Test Reports",
              "attachments": [{
                "color": "#1a237e",
                "fields": [{
                  "title": "Repository",
                  "value": "${{ github.repository }}",
                  "short": true
                }, {
                  "title": "Branch",
                  "value": "${{ github.ref_name }}",
                  "short": true
                }, {
                  "title": "Run",
                  "value": "#${{ github.run_number }}",
                  "short": true
                }, {
                  "title": "Commit",
                  "value": "`${{ github.sha }}`",
                  "short": true
                }],
                "actions": [{
                  "type": "button",
                  "text": "🔧 API Test Report",
                  "url": "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/nightly-reports/${{ github.run_number }}/api/"
                }, {
                  "type": "button",
                  "text": "🌐 Browser Test Report",
                  "url": "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/nightly-reports/${{ github.run_number }}/browser/"
                }, {
                  "type": "button",
                  "text": "📋 All Reports",
                  "url": "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/nightly-reports/${{ github.run_number }}/"
                }, {
                  "type": "button", 
                  "text": "🔍 Workflow",
                  "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                }]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
